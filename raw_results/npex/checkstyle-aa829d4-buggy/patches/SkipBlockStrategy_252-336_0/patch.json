{
    "contents": "if (targetAST != null) {\n    // get values of annotation\n    java.util.List<java.lang.String> values = null;\n    final com.puppycrawl.tools.checkstyle.api.DetailAST lparenAST = aAST.findFirstToken(com.puppycrawl.tools.checkstyle.api.TokenTypes.LPAREN);\n    if (lparenAST != null) {\n        final com.puppycrawl.tools.checkstyle.api.DetailAST nextAST = lparenAST.getNextSibling();\n        if (nextAST != null) {\n            final int nextType = nextAST.getType();\n            switch (nextType) {\n                case com.puppycrawl.tools.checkstyle.api.TokenTypes.EXPR :\n                case com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATION_ARRAY_INIT :\n                    values = com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.getAnnotationValues(nextAST);\n                    break;\n                case com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR :\n                    // expected children: IDENT ASSIGN ( EXPR |\n                    // ANNOTATION_ARRAY_INIT )\n                    values = com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.getAnnotationValues(com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.getNthChild(nextAST, 2));\n                    break;\n                case com.puppycrawl.tools.checkstyle.api.TokenTypes.RPAREN :\n                    // no value present (not valid Java)\n                    break;\n                default :\n                    // unknown annotation value type (new syntax?)\n            }\n        }\n    }\n    if (values == null) {\n        log(aAST, \"suppress.warnings.missing.value\");\n        return;\n    }\n    // get target of annotation\n    com.puppycrawl.tools.checkstyle.api.DetailAST targetAST = null;\n    com.puppycrawl.tools.checkstyle.api.DetailAST parentAST = aAST.getParent();\n    if (parentAST != null) {\n        switch (parentAST.getType()) {\n            case com.puppycrawl.tools.checkstyle.api.TokenTypes.MODIFIERS :\n            case com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS :\n                parentAST = parentAST.getParent();\n                if (parentAST != null) {\n                    switch (parentAST.getType()) {\n                        case com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATION_DEF :\n                        case com.puppycrawl.tools.checkstyle.api.TokenTypes.PACKAGE_DEF :\n                        case com.puppycrawl.tools.checkstyle.api.TokenTypes.CLASS_DEF :\n                        case com.puppycrawl.tools.checkstyle.api.TokenTypes.INTERFACE_DEF :\n                        case com.puppycrawl.tools.checkstyle.api.TokenTypes.ENUM_DEF :\n                        case com.puppycrawl.tools.checkstyle.api.TokenTypes.CTOR_DEF :\n                        case com.puppycrawl.tools.checkstyle.api.TokenTypes.METHOD_DEF :\n                        case com.puppycrawl.tools.checkstyle.api.TokenTypes.PARAMETER_DEF :\n                        case com.puppycrawl.tools.checkstyle.api.TokenTypes.VARIABLE_DEF :\n                            targetAST = parentAST;\n                            break;\n                        default :\n                            // unexpected target type\n                    }\n                }\n                break;\n            default :\n                // unexpected container type\n        }\n    }\n    if (targetAST == null) {\n        log(aAST, \"suppress.warnings.invalid.target\");\n    }\n    // get text range of target\n    final int firstLine = targetAST.getLineNo();\n    final int firstColumn = targetAST.getColumnNo();\n    final com.puppycrawl.tools.checkstyle.api.DetailAST nextAST = targetAST.getNextSibling();\n    final int lastLine;\n    final int lastColumn;\n    if (nextAST != null) {\n        lastLine = nextAST.getLineNo();\n        lastColumn = nextAST.getColumnNo() - 1;\n    } else {\n        lastLine = java.lang.Integer.MAX_VALUE;\n        lastColumn = java.lang.Integer.MAX_VALUE;\n    }\n    // add suppression entries for listed checks\n    final java.util.List<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.Entry> entries = com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.ENTRIES.get();\n    if (entries != null) {\n        for (java.lang.String value : values) {\n            // strip off the checkstyle-only prefix if present\n            if (value.startsWith(com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.CHECKSTYLE_PREFIX)) {\n                value = value.substring(com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.CHECKSTYLE_PREFIX.length());\n            }\n            entries.add(new com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.Entry(value, firstLine, firstColumn, lastLine, lastColumn));\n        }\n    }\n}",
    "original_filepath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
    "patched_lines": [250]
}